/**
 * Citibank EventHandler
 * Test description
 *
 * OpenAPI spec version: 0.0.1
 * Contact: contact@snippets.local
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 2.4.8
 *
 * Do not edit the class manually.
 *
 */

(function(factory) {
    if (typeof module === 'object' && module.exports) {
        // CommonJS-like environments that support module.exports, like Node.
        module.exports = factory(
            require('./ApiClient'),
            require('./model/CategorySerializers'),
            require('./model/EventSerializers'),
            require('./model/RegisterSerializers'),
            require('./api/CategoriesApi'),
            require('./api/EventsApi'),
            require('./api/RegisterApi'),
        );
    }
})(function(
    ApiClient,
    CategorySerializers,
    EventSerializers,
    RegisterSerializers,
    CategoriesApi,
    EventsApi,
    RegisterApi,
) {
    'use strict';

    /**
     * Test_description.<br>
     * The <code>index</code> module provides access to constructors for all the classes which comprise the public API.
     * <p>
     * An AMD (recommended!) or CommonJS application will generally do something equivalent to the following:
     * <pre>
     * var CitibankEventHandler = require('index'); // See note below*.
     * var xxxSvc = new CitibankEventHandler.XxxApi(); // Allocate the API class we're going to use.
     * var yyyModel = new CitibankEventHandler.Yyy(); // Construct a model instance.
     * yyyModel.someProperty = 'someValue';
     * ...
     * var zzz = xxxSvc.doSomething(yyyModel); // Invoke the service.
     * ...
     * </pre>
     * <em>*NOTE: For a top-level AMD script, use require(['index'], function(){...})
     * and put the application logic within the callback function.</em>
     * </p>
     * <p>
     * A non-AMD browser application (discouraged) might do something like this:
     * <pre>
     * var xxxSvc = new CitibankEventHandler.XxxApi(); // Allocate the API class we're going to use.
     * var yyy = new CitibankEventHandler.Yyy(); // Construct a model instance.
     * yyyModel.someProperty = 'someValue';
     * ...
     * var zzz = xxxSvc.doSomething(yyyModel); // Invoke the service.
     * ...
     * </pre>
     * </p>
     * @module index
     * @version 0.0.1
     */
    var exports = {
        /**
         * The ApiClient constructor.
         * @property {module:ApiClient}
         */
        ApiClient: ApiClient,
        /**
         * The CategorySerializers model constructor.
         * @property {module:model/CategorySerializers}
         */
        CategorySerializers: CategorySerializers,
        /**
         * The EventSerializers model constructor.
         * @property {module:model/EventSerializers}
         */
        EventSerializers: EventSerializers,
        /**
         * The RegisterSerializers model constructor.
         * @property {module:model/RegisterSerializers}
         */
        RegisterSerializers: RegisterSerializers,
        /**
         * The CategoriesApi service constructor.
         * @property {module:api/CategoriesApi}
         */
        CategoriesApi: CategoriesApi,
        /**
         * The EventsApi service constructor.
         * @property {module:api/EventsApi}
         */
        EventsApi: EventsApi,
        /**
         * The RegisterApi service constructor.
         * @property {module:api/RegisterApi}
         */
        RegisterApi: RegisterApi,
    };

    return exports;
});
