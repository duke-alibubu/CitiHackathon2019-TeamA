/**
 * Citibank Communicator
 * Email Notifications Sender
 *
 * OpenAPI spec version: 0.0.1
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 2.4.8
 *
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof module === "object" && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require("expect.js"), require("../../src/index"));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.CitibankCommunicator);
  }
})(this, function(expect, CitibankCommunicator) {
  "use strict";

  var instance;

  beforeEach(function() {
    instance = new CitibankCommunicator.EventUpdatesApi();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === "function") return object[getter]();
    else return object[property];
  };

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === "function") object[setter](value);
    else object[property] = value;
  };

  describe("EventUpdatesApi", function() {
    describe("eventsEventUpdatesDelete", function() {
      it("should call eventsEventUpdatesDelete successfully", function(done) {
        //uncomment below and update the code to test eventsEventUpdatesDelete
        //instance.eventsEventUpdatesDelete(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe("eventsEventUpdatesPost", function() {
      it("should call eventsEventUpdatesPost successfully", function(done) {
        //uncomment below and update the code to test eventsEventUpdatesPost
        //instance.eventsEventUpdatesPost(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
  });
});
